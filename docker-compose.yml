services:
  db:
    image: mysql:9.2.0
    environment:
      MYSQL_DATABASE: 'dicom_db'
      MYSQL_USER: 'dicom_user'
      MYSQL_PASSWORD: 'dicom_password'
      MYSQL_ROOT_PASSWORD: 'root'
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql  # Mounts the named volume
    networks:
      - backend

  python-api:
    build:
      context: ./backend/python-api
      dockerfile: Dockerfile
    volumes:
      # Map the host's "uploads" directory to the container's "uploads" directory.
      # This ensures that any files uploaded to /app/uploads persist on the host.
      - uploads:/app/uploads
    networks:
      - backend

  node-api:
    build:
      context: ./backend/node-api
      dockerfile: Dockerfile
    networks:
      - backend
    environment:
      NODE_ENV: production
    entrypoint: ["/bin/sh", "-c", "/app/wait-for-db.sh && npx sequelize-cli db:migrate && node server.mjs"]


  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    networks:
      - backend
    volumes:
    - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_data:
  uploads:

networks:
  backend: